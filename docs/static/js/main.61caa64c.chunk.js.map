{"version":3,"sources":["logo.svg","components/IntentCard.js","pages/IntentSelection.js","App.js","reportWebVitals.js","index.js"],"names":["IntentCard","props","handleClick","onSelectionChange","intent","selected","handleSeeMore","e","stopPropagation","state","Col","xs","onClick","this","className","Row","name","icon","faCheckCircle","trainingData","expressions","text","reply","Button","variant","Component","IntentSelection","setState","showModal","seeMoreIntent","handleCloseModal","handleIntentCardSelection","selectedIntents","filter","x","id","handleSelectAll","intents","handleDeselectAll","size","length","map","Badge","some","Modal","show","onHide","Header","closeButton","Title","Body","expression","require","App","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61caa64c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {Component} from \"react\";\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faCheckCircle} from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class IntentCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: false\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.onSelectionChange(this.props.intent, !this.props.selected);\r\n    }\r\n\r\n    handleSeeMore = (e) => {\r\n        e.stopPropagation();\r\n        this.props.handleSeeMore(this.props.intent);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col xs={3} onClick={this.handleClick}>\r\n                <Col\r\n                    className={\"intent-card m-2 p-2 d-flex flex-column justify-content-around \" + (this.props.selected ? \"selected\" : \"\")}>\r\n                    <Row className=\"p-1 m-1 justify-content-between\">\r\n                        <h5>{this.props.intent.name}</h5>\r\n                        <FontAwesomeIcon className={this.props.selected ? \"checked\" : \"unchecked\"}\r\n                                         icon={faCheckCircle}/>\r\n                    </Row>\r\n                    <Row className=\"p-1 m-1\">\r\n                        <p className=\"font-12\">\r\n                            Example: If the user says: <strong\r\n                            className=\"font-14\">{this.props.intent.trainingData.expressions[0].text} </strong><br/>\r\n                            the response will be: <strong\r\n                            className=\"font-14\">{this.props.intent.reply.text}</strong>\r\n                        </p>\r\n                    </Row>\r\n                    <Row className=\"p-1 m-1\">\r\n                        <Button onClick={this.handleSeeMore} variant=\"outline-info\">See More Examples</Button>\r\n                    </Row>\r\n                </Col>\r\n            </Col>\r\n        )\r\n    }\r\n}","import {Component} from \"react\";\r\nimport IntentCard from \"../components/IntentCard\";\r\nimport {Badge, Button, Col, Modal, Row} from \"react-bootstrap\";\r\n\r\nexport default class IntentSelection extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            seeMoreIntent: null,\r\n            selectedIntents: [],\r\n        }\r\n    }\r\n\r\n    handleSeeMore = (intent) => {\r\n        this.setState({\r\n            showModal: true,\r\n            seeMoreIntent: intent\r\n        });\r\n    }\r\n    handleCloseModal = () => {\r\n        this.setState({\r\n            showModal: false,\r\n            seeMoreIntent: null\r\n        });\r\n    }\r\n    handleIntentCardSelection = (intent, selected) => {\r\n        let selectedIntents = selected ?\r\n            [...this.state.selectedIntents, intent]\r\n            : this.state.selectedIntents.filter(x => x.id != intent.id);\r\n        this.setState({\r\n            selectedIntents\r\n        });\r\n    }\r\n\r\n    handleSelectAll = () => {\r\n        this.setState({\r\n            selectedIntents: this.props.intents\r\n        })\r\n    }\r\n\r\n    handleDeselectAll = () => {\r\n        this.setState({\r\n            selectedIntents: []\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"intent-card-container p-2\">\r\n                <Row className=\"pl-4 pr-2 pt-2 pb-2\">\r\n                    <Col xs=\"12\" className=\"intent-card-container-title\">\r\n\r\n                        <Row className=\"d-flex align-content-center justify-content-center\">\r\n                            <Col>\r\n                                <h5 className=\"p-3\">Select The Intents You Would Like To Use</h5>\r\n                            </Col>\r\n                            <Col className=\"d-flex flex-column justify-content-center\">\r\n                                <Row className=\"justify-content-end  p-2\">\r\n                                    <Button variant=\"outline-success\" className=\"m-1\" size=\"sm\"\r\n                                            onClick={this.handleSelectAll}>Select All</Button>\r\n                                    <Button variant=\"outline-danger\" className=\"m-1\" size=\"sm\"\r\n                                            onClick={this.handleDeselectAll}>Deselect All</Button>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            this.state.selectedIntents.length > 0 ?\r\n                                <Row className=\"m-2\">\r\n                                    {\r\n                                        this.state.selectedIntents.map(intent =>\r\n                                            <Badge className=\"m-1\" variant=\"success\" key={intent.id}>{intent.name}</Badge>)\r\n                                    }\r\n                                </Row>\r\n                                : \"\"\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {\r\n                        this.props.intents.map(intent =>\r\n                            <IntentCard\r\n                                key={intent.id}\r\n                                intent={intent}\r\n                                handleSeeMore={this.handleSeeMore}\r\n                                onSelectionChange={this.handleIntentCardSelection}\r\n                                selected={this.state.selectedIntents.some(x => x.id == intent.id)}\r\n                            ></IntentCard>)\r\n                    }\r\n                </Row>\r\n                <Modal show={this.state.showModal} onHide={this.handleCloseModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>\r\n                            {this.state.seeMoreIntent?.name}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>\r\n                            Example: If the user says any of the following &nbsp;\r\n                            <ul>\r\n                                {\r\n                                    this.state.seeMoreIntent?.trainingData?.expressions?.map(expression =>\r\n                                        <li key={expression.id}><strong>{expression.text}</strong></li>)\r\n                                }\r\n                            </ul>\r\n                            The response will be <strong>{this.state.seeMoreIntent?.reply.text}</strong>\r\n                        </p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import logo from './logo.svg';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport IntentSelection from \"./pages/IntentSelection\";\nimport {Container} from \"react-bootstrap\";\n\nconst intents = require('./assets/intents')\n\nfunction App() {\n    return (\n        <Container fluid>\n            <IntentSelection\n                intents={intents}/>\n        </Container>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}